{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Stats/Statistics.module.css","components/Transactions/TransactionList.module.css","components/Profile/Profile.js","components/Profile/ProfileStatsList.js","components/Profile/ProfileCard.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transactions/TransactionHistory.js","components/Transactions/TransactionList.js","components/Stats/Statistics.js","components/Stats/StatsList.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","className","styles","description","src","alt","ProfileStatsList","stats","followers","views","likes","label","quantity","ProfileCard","profile","user","FriendListItem","isOnline","id","item","status","greenLabel","redLabel","width","FriendList","friendList","friends","map","friend","TransactionHistory","type","amount","currency","TransactionList","transactionHistory","transactions","transaction","Statistics","percentage","StatsList","statisics","title","statList","statisticalData","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2d70f0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2L8ZT\",\"description\":\"Profile_description__1qHS-\",\"avatar\":\"Profile_avatar__1xQEZ\",\"name\":\"Profile_name__RC5T4\",\"stats\":\"Profile_stats__3CpFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__17HTx\",\"item\":\"FriendList_item__2OHV2\",\"avatar\":\"FriendList_avatar__1PzeN\",\"redLabel\":\"FriendList_redLabel__2Dpix\",\"greenLabel\":\"FriendList_greenLabel__2E7ik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__2PSVv\",\"item\":\"Statistics_item__3U5J2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionList_transactionHistory__2eddt\"};","import PropTypes from 'prop-types';\r\nimport { FaMapMarkerAlt, FaUserAlt } from \"react-icons/fa\";\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar,\r\n}) => {\r\n  return (\r\n    <div className={styles.description}>\r\n      <img\r\n        src={avatar}\r\n        alt=\"user avatar\"\r\n        className={styles.avatar}\r\n      />\r\n      <p className={styles.name}><FaUserAlt /> {name}</p>\r\n      <p className={styles.tag}>{tag}</p>\r\n      <p className={styles.location}><FaMapMarkerAlt /> {location}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.node,\r\n}\r\n\r\nexport {Profile}","import PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\nconst ProfileStatsList = ({\r\n  stats,\r\n  followers,\r\n  views,\r\n  likes,\r\n}) => {\r\n  return (\r\n    <ul className={styles.stats}>\r\n      <li>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{views}</span>\r\n      </li>\r\n      <li>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{likes}</span>\r\n      </li>\r\n    </ul>\r\n  )\r\n};\r\n\r\nProfileStatsList.propTypes = {\r\n  stats: PropTypes.arrayOf().isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes:PropTypes.number.isRequired,\r\n}\r\n\r\nexport { ProfileStatsList };","import user from './user.json';\r\nimport { Profile } from './Profile';\r\nimport { ProfileStatsList } from './ProfileStatsList';\r\nimport styles from './Profile.module.css';\r\n\r\nfunction ProfileCard() {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <Profile\r\n        key={user.tag}\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n      />\r\n      <ProfileStatsList\r\n        stats={user.stats}\r\n        followers={user.stats.followers}\r\n        views={user.stats.views}\r\n        likes={user.stats.likes}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport {ProfileCard}","import PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({\r\n  avatar,\r\n  name,\r\n  isOnline,\r\n  id,\r\n}) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.status}> {isOnline === true ?\r\n        <div className={styles.greenLabel}></div> : <div className={styles.redLabel}></div>}</span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n}\r\n\r\nexport { FriendListItem }","import { FriendListItem } from './FriendListItem'\r\nimport friends from './friends.json';\r\nimport styles from './FriendList.module.css';\r\n\r\nfunction FriendList() {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {friends.map(friend => (\r\n        <FriendListItem\r\n          key={friend.id}\r\n          isOnline={friend.isOnline}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport { FriendList };\r\n","import PropTypes from 'prop-types';\r\n\r\nconst TransactionHistory = ({ id, type, amount, currency }) => {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n}\r\n\r\nexport { TransactionHistory }\r\n","import {TransactionHistory} from './TransactionHistory'\r\nimport transactions from './transactions.json';\r\nimport styles from './TransactionList.module.css';\r\n\r\nfunction TransactionList() {\r\n  return (\r\n    <table className={styles.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {transactions.map(transaction => (\r\n          <TransactionHistory\r\n            key={transaction.id}\r\n            type={transaction.type}\r\n            amount={transaction.amount}\r\n            currency={transaction.currency}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport { TransactionList };","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({\r\n  id,\r\n  label,\r\n  percentage,\r\n}) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.label}>{label} </span>\r\n      <span className={styles.percentage}>{percentage}%</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport { Statistics };","import { Statistics } from './Statistics';\r\nimport styles from './Statistics.module.css';\r\nimport statisticalData from './statistical-data.json';\r\n\r\nfunction StatsList() {\r\n  return (\r\n    <section className={styles.statisics}>\r\n      <h2 className={styles.title}>Upload stats</h2>\r\n      <ul className={styles.statList}>\r\n        {statisticalData.map(data => (\r\n          <Statistics\r\n            id={data.id}\r\n            label={data.label}\r\n            percentage={data.percentage}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport { StatsList }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ProfileCard } from './components/Profile/ProfileCard';\nimport { FriendList } from './components/FriendList/FriendList';\nimport { TransactionList } from './components/Transactions/TransactionList';\nimport { StatsList } from './components/Stats/StatsList';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProfileCard />\n    <StatsList />\n    <FriendList />\n    <TransactionList />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}